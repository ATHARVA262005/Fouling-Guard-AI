import React, { useState, useEffect } from 'react';
import { FiFileText, FiEye, FiDownload, FiCalendar } from 'react-icons/fi';
import { Link } from 'react-router-dom';

interface Report {
  _id: string;
  reportId: string;
  vessel: string;
  species: string;
  density: number;
  criticality: string;
  fuelPenalty: number;
  timestamp: string;
  location?: {
    lat: number;
    lng: number;
  };
}

const Reports: React.FC = () => {
  const [activeDownload, setActiveDownload] = useState<string | null>(null);
  const [reports, setReports] = useState<Report[]>([]);
  const [loading, setLoading] = useState(true);
  
  useEffect(() => {
    const fetchReports = async () => {
      try {
        const apiUrl = import.meta.env.VITE_API_URL || 'http://localhost:8080';
        console.log('üìä Fetching reports from:', `${apiUrl}/api/reports`);
        
        const response = await fetch(`${apiUrl}/api/reports`);
        console.log('üì° Reports response status:', response.status);
        
        if (response.ok) {
          const reportsData = await response.json();
          console.log('‚úÖ Raw response data:', reportsData);
          
          // Handle different response formats
          const reports = Array.isArray(reportsData) ? reportsData : 
                         reportsData.reports ? reportsData.reports : 
                         reportsData.data ? reportsData.data : [];
          
          console.log('‚úÖ Processed reports:', reports.length, 'reports');
          setReports(reports);
        } else {
          const errorText = await response.text();
          console.error('‚ùå Failed to fetch reports:', response.status, errorText);
        }
      } catch (error) {
        console.error('üî• Error fetching reports:', error);
      } finally {
        setLoading(false);
      }
    };
    
    fetchReports();
  }, []);
  
  if (loading) {
    return <div className="flex items-center justify-center min-h-screen">
      <div className="text-center">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
        <p>Loading reports...</p>
      </div>
    </div>;
  }

  const getCriticalityColor = (criticality: string) => {
    switch (criticality) {
      case 'High': return 'bg-red-100 text-red-700 border-red-200';
      case 'Medium': return 'bg-yellow-100 text-yellow-700 border-yellow-200';
      case 'Low': return 'bg-green-100 text-green-700 border-green-200';
      default: return 'bg-gray-100 text-gray-700 border-gray-200';
    }
  };

  const downloadTXT = (report: any) => {
    const reportContent = `FOULING GUARD AI - ANALYSIS REPORT\n\n` +
      `Report ID: ${report.reportId}\n` +
      `Vessel: ${report.vessel}\n` +
      `Date: ${new Date(report.timestamp).toLocaleDateString()}\n\n` +
      `DETECTION RESULTS\n` +
      `Species Detected: ${report.species}\n` +
      `Density: ${report.density}%\n` +
      `Criticality: ${report.criticality}\n\n` +
      `IMPACT ANALYSIS\n` +
      `Fuel Penalty: ${report.fuelPenalty}%\n\n` +
      `Generated by FoulingGuard AI`;

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `FoulingReport_${report.reportId}_${new Date(report.timestamp).toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    setActiveDownload(null);
  };

  const downloadPDF = (report: any) => {
    const reportHTML = `
      <html>
        <head><title>Fouling Report ${report.id}</title></head>
        <body style="font-family: Arial, sans-serif; padding: 20px;">
          <h1>FOULING GUARD AI - ANALYSIS REPORT</h1>
          <p><strong>Report ID:</strong> ${report.reportId}</p>
          <p><strong>Vessel:</strong> ${report.vessel}</p>
          <p><strong>Date:</strong> ${new Date(report.timestamp).toLocaleDateString()}</p>
          <h2>DETECTION RESULTS</h2>
          <p><strong>Species:</strong> ${report.species}</p>
          <p><strong>Density:</strong> ${report.density}%</p>
          <p><strong>Criticality:</strong> ${report.criticality}</p>
          <h2>IMPACT ANALYSIS</h2>
          <p><strong>Fuel Penalty:</strong> ${report.fuelPenalty}%</p>
          <p><em>Generated by FoulingGuard AI</em></p>
        </body>
      </html>
    `;
    
    const newWindow = window.open('', '_blank');
    if (newWindow) {
      newWindow.document.write(reportHTML);
      newWindow.document.close();
      newWindow.print();
    }
    setActiveDownload(null);
  };

  return (
    <div className="bg-gradient-to-br from-slate-50 to-blue-50 p-4 min-h-screen">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-6">
          <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
            <FiFileText className="text-blue-600" /> Analysis Reports
          </h1>
          <p className="text-gray-600 mt-2">View and manage all hull fouling analysis reports</p>
        </div>

        {/* Stats Cards */}
        <div className="grid md:grid-cols-4 gap-4 mb-6">
          <div className="bg-white rounded-xl shadow-lg p-4 text-center">
            <div className="text-2xl font-bold text-blue-600">{reports.length}</div>
            <div className="text-sm text-gray-600">Total Reports</div>
          </div>
          <div className="bg-white rounded-xl shadow-lg p-4 text-center">
            <div className="text-2xl font-bold text-red-600">
              {reports.filter(r => r.criticality === 'High').length}
            </div>
            <div className="text-sm text-gray-600">High Priority</div>
          </div>
          <div className="bg-white rounded-xl shadow-lg p-4 text-center">
            <div className="text-2xl font-bold text-green-600">
              {reports.filter(r => r.criticality === 'Low').length}
            </div>
            <div className="text-sm text-gray-600">Low Priority</div>
          </div>
          <div className="bg-white rounded-xl shadow-lg p-4 text-center">
            <div className="text-2xl font-bold text-orange-600">
              {reports.length > 0 ? (reports.reduce((sum, r) => sum + r.fuelPenalty, 0) / reports.length).toFixed(1) : '0'}%
            </div>
            <div className="text-sm text-gray-600">Avg Fuel Penalty</div>
          </div>
        </div>

        {/* Reports Table */}
        <div className="bg-white rounded-2xl shadow-xl overflow-hidden">
          <div className="p-6 border-b border-gray-200">
            <h2 className="text-xl font-semibold text-gray-900">Recent Reports</h2>
          </div>
          
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Report ID
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Date
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Vessel
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Species
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Density
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Criticality
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Fuel Penalty
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Actions
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {reports.map((report) => (
                  <tr key={report._id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                      {report.reportId}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      <div className="flex items-center gap-1">
                        <FiCalendar className="text-gray-400" />
                        {new Date(report.timestamp).toLocaleDateString()}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {report.vessel}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {report.species}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {report.density}%
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full border ${getCriticalityColor(report.criticality)}`}>
                        {report.criticality}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {report.fuelPenalty}%
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div className="flex gap-2">
                        <Link
                          to={`/report?reportId=${report.reportId}&vessel=${report.vessel}&species=${report.species}&density=${report.density}&criticality=${report.criticality}&fuelPenalty=${report.fuelPenalty}`}
                          className="text-blue-600 hover:text-blue-900 p-1 rounded hover:bg-blue-50"
                          title="View Report"
                        >
                          <FiEye />
                        </Link>
                        <div className="relative">
                          <button
                            onClick={() => setActiveDownload(activeDownload === report.reportId ? null : report.reportId)}
                            className="text-green-600 hover:text-green-900 p-1 rounded hover:bg-green-50"
                            title="Download Report"
                          >
                            <FiDownload />
                          </button>
                          {activeDownload === report.reportId && (
                            <div className="absolute top-full mt-1 right-0 bg-white border border-gray-200 rounded-lg shadow-lg z-50 whitespace-nowrap">
                              <button
                                onClick={() => downloadTXT(report)}
                                className="block w-full px-4 py-2 text-left hover:bg-gray-50 rounded-t-lg transition-colors text-gray-900 text-sm"
                              >
                                Download TXT
                              </button>
                              <button
                                onClick={() => downloadPDF(report)}
                                className="block w-full px-4 py-2 text-left hover:bg-gray-50 rounded-b-lg transition-colors text-gray-900 text-sm"
                              >
                                Download PDF
                              </button>
                            </div>
                          )}
                        </div>
                      </div>
                    </td>
                  </tr>
                ))}
                {reports.length === 0 && (
                  <tr>
                    <td colSpan={8} className="px-6 py-8 text-center text-gray-500">
                      No reports found. <Link to="/upload" className="text-blue-600 hover:underline">Create your first report</Link>
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>

        {/* Action Button */}
        <div className="text-center mt-6">
          <Link 
            to="/upload" 
            className="inline-flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
          >
            <FiFileText /> Generate New Report
          </Link>
        </div>
      </div>
    </div>
  );
};

export default Reports;